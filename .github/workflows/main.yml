name: Playwright Tests CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release

  test:
    needs: build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test_class: [UITests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install Playwright
        run: |
          dotnet tool install --global Microsoft.Playwright.CLI
          dotnet build ./tests/tests.csproj --configuration Release
          playwright install --with-deps

      - name: Ensure Playwright assets are present
        run: |
          dotnet build ./tests/tests.csproj --configuration Release --no-restore

      - name: Clean conflicting packages
        run: |
          dotnet remove ./tests/tests.csproj package NUnit.Allure || true
          dotnet remove ./tests/tests.csproj package Allure.NUnit || true

      - name: Install Allure NUnit Adapter (correct version)
        run: |
          dotnet add ./tests/tests.csproj package Allure.NUnit
          dotnet add ./tests/tests.csproj package Allure.Commons

      - name: Restore, build, and run tests with TRX logger
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet test --configuration Release --results-directory "allure-results" --logger "trx;LogFileName=TestResults.trx"

      - name: Install Allure CLI
        run: npm install -g allure-commandline

      - name: Generate Allure Results
        run: |
          allure generate allure-results --clean -o allure-report

      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.test_class }}-${{ github.run_id }}
          path: allure-report

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Final Allure Report
        uses: actions/download-artifact@v4
        with:
          name: allure-report-*
          merge-multiple: true
          path: allure-report

      - name: Deploy Allure Report to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: ./allure-report
          clean: true
          token: ${{ secrets.GITHUB_TOKEN }}
